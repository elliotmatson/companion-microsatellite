--- a/components/arduino_tinyusb/src/dcd_dwc2.c	2024-10-02 12:17:40.000000000 +0300
+++ b/components/arduino_tinyusb/src/dcd_dwc2.c	2024-10-02 12:19:48.000000000 +0300
@@ -316,6 +316,16 @@
 //--------------------------------------------------------------------
 // Endpoint
 //--------------------------------------------------------------------
+#if TU_CHECK_MCU(OPT_MCU_ESP32S2, OPT_MCU_ESP32S3)
+// Keep count of how many FIFOs are in use
+static uint8_t _allocated_fifos = 1; //FIFO0 is always in use
+
+// Will either return an unused FIFO number, or 0 if all are used.
+static uint8_t get_free_fifo(void) {
+  if (_allocated_fifos < 5) return _allocated_fifos++;
+  return 0;
+}
+#endif
 
 static void edpt_activate(uint8_t rhport, tusb_desc_endpoint_t const * p_endpoint_desc) {
   dwc2_regs_t* dwc2 = DWC2_REG(rhport);
@@ -332,7 +342,19 @@
                    (p_endpoint_desc->bmAttributes.xfer != TUSB_XFER_ISOCHRONOUS ? DOEPCTL_SD0PID_SEVNFRM : 0) |
                    (xfer->max_size << DOEPCTL_MPSIZ_Pos);
   if (dir == TUSB_DIR_IN) {
-    epctl |= (epnum << DIEPCTL_TXFNUM_Pos);
+    //epctl |= (epnum << DIEPCTL_TXFNUM_Pos);
+    uint8_t fifo_num = epnum;
+#if TU_CHECK_MCU(OPT_MCU_ESP32S2, OPT_MCU_ESP32S3)
+    // Special Case for EP5, which is used by CDC but not actually called by the driver
+    // we can give it a fake FIFO
+    if (epnum == 5) {
+      fifo_num = epnum;
+    } else {
+      fifo_num = get_free_fifo();
+    }
+    //TU_ASSERT(fifo_num != 0);
+#endif
+    epctl |= (fifo_num << DIEPCTL_TXFNUM_Pos);
   }
 
   dwc2_dep_t* dep = &dwc2->ep[1 - dir][epnum];
@@ -840,6 +862,10 @@
     }
   }
 
+#if TU_CHECK_MCU(OPT_MCU_ESP32S2, OPT_MCU_ESP32S3)
+  _allocated_fifos = 1;
+#endif
+
   dfifo_flush_tx(dwc2, 0x10); // all tx fifo
   dfifo_flush_rx(dwc2);
 
@@ -1186,6 +1212,9 @@
   if (int_status & GINTSTS_USBRST) {
     // USBRST is start of reset.
     dwc2->gintsts = GINTSTS_USBRST;
+#if TU_CHECK_MCU(OPT_MCU_ESP32S2, OPT_MCU_ESP32S3)
+    _allocated_fifos = 1;
+#endif
     bus_reset(rhport);
   }
 
@@ -1217,7 +1246,11 @@
 
   if (int_status & GINTSTS_USBSUSP) {
     dwc2->gintsts = GINTSTS_USBSUSP;
-    dcd_event_bus_signal(rhport, DCD_EVENT_SUSPEND, true);
+    //dcd_event_bus_signal(rhport, DCD_EVENT_SUSPEND, true);
+    dcd_event_bus_signal(rhport, DCD_EVENT_UNPLUGGED, true);
+#if TU_CHECK_MCU(OPT_MCU_ESP32S2, OPT_MCU_ESP32S3)
+    _allocated_fifos = 1;
+#endif
   }
 
   if (int_status & GINTSTS_WKUINT) {
@@ -1234,6 +1267,9 @@
 
     if (otg_int & GOTGINT_SEDET) {
       dcd_event_bus_signal(rhport, DCD_EVENT_UNPLUGGED, true);
+#if TU_CHECK_MCU(OPT_MCU_ESP32S2, OPT_MCU_ESP32S3)
+      _allocated_fifos = 1;
+#endif
     }
 
     dwc2->gotgint = otg_int;
